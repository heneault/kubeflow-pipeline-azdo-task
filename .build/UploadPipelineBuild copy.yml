#Pipeline for building the task and publishing the extension

trigger: none
# - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  stagingPublisher: 'v-ryzube'
  productionPublisher: 'CSE-DevOps'
  extensionId: 'UploadKubeflowPipeline'

jobs:
- job: BuildAndPackage
  displayName: Build and Package Extension
  steps:
  - task: UseNode@1
    inputs:
      version: '12.16.0'
      checkLatest: false

  - task: Npm@1
    displayName: 'Installing Dependencies required by Upload Task'
    inputs:
      command: 'install'
      workingDir: 'src/Tasks/Upload_Pipeline'

  # - task: Npm@1
  #   displayName: 'Installing Dependencies required by Create Task'
  #   inputs:
  #     command: 'install'
  #     workingDir: 'src/Tasks/Create_Run_Experiments'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        cd src/Tasks/Upload_Pipeline
        tsc
        # cd ..
        # cd Create_Run_Experiments
        # tsc

  - task: Npm@1
    displayName: Running Unit Tests
    inputs:
      command: 'custom'
      workingDir: 'src/Tasks/Upload_Pipeline'
      customCommand: 'test'

  # - task: Npm@1
  #   displayName: Running Unit Tests
  #   inputs:
  #     command: 'custom'
  #     workingDir: 'src/Tasks/Create_Run_Experiments'
  #     customCommand: 'test'

  - task: PublishTestResults@2
    displayName: "Publish unit test result"
    inputs:
      testResultsFiles: "unit_test_report.xml"
      testRunTitle: "Unit tests with Mocha"
      mergeTestResults: false
      searchFolder: "$(Build.SourcesDirectory)"

  # - task: QueryAzureDevOpsExtensionVersion@2
  #   displayName: Private - Get Existing Patch Number Preview
  #   inputs:
  #     connectTo: 'VsTeam'
  #     connectedServiceName: 'KubeflowExtensionBuildAndPublish'
  #     publisherId: '$(stagingPublisher)'
  #     extensionId: '$(extensionId)'
  #     versionAction: 'Patch'
  #     outputVariable: 'Private.Extension.Version'

      
  # - task: PackageAzureDevOpsExtension@2
  #   inputs:
  #     rootFolder: '$(System.DefaultWorkingDirectory)'
  #     publisherId: '$(stagingPublisher)'
  #     extensionId: '$(extensionId)'
  #     extensionName: 'Kubeflow Upload Pipeline'
  #     extensionVersion: '$(Private.Extension.Version)'
  #     updateTasksVersion: true
  #     updateTasksVersionType: 'patch'
  #     extensionVisibility: 'private'
  #     extensionPricing: 'free'

  - task: QueryAzureDevOpsExtensionVersion@2
    displayName: CSE-DevOps Get Existing Patch Number
    inputs:
      connectTo: 'VsTeam'
      connectedServiceName: 'KubeflowExtensionBuildAndPublish'
      publisherId: '$(productionPublisher)'
      extensionId: '$(extensionId)'
      versionAction: 'Patch'
      outputVariable: 'Public.Extension.Version'

  - task: PackageAzureDevOpsExtension@2
    displayName: CSE-DevOps package extension
    inputs:
      rootFolder: '$(System.DefaultWorkingDirectory)'
      publisherId: '$(productionPublisher)'
      extensionId: '$(extensionId)'
      extensionName: 'Kubeflow Upload Pipeline'
      extensionVersion: '$(Public.Extension.Version)'
      updateTasksVersion: true
      updateTasksVersionType: 'patch'
      extensionVisibility: 'private'
      extensionPricing: 'free'

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      Contents: '**/*.vsix'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'ExtensionFiles'
      publishLocation: 'pipeline'

